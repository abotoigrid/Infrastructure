name: Infrastructure Automation

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  fmt:
    name: Terraform Format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Format Check
        id: fmt_check
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Format
        if: steps.fmt_check.outcome != 'success'
        run: terraform fmt

  validate:
    name: Terraform Validate
    needs: fmt
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate

  plan:
    name: Terraform Plan
    needs: validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -var="instance_key_name=${{ vars.INSTANCE_KEY_NAME }}"
      - name: Upload Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: Terraform/tfplan
    
  apply:
    name: Terraform Apply
    needs: plan
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        working-directory: Terraform
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply tfplan
      - name: Get outputs
        id: get-outputs
        run: |
          echo "vm_public_ip=$(terraform output -raw vm_public_ip)" >> "$GITHUB_OUTPUT"
          echo "db_endpoint=$(terraform output -raw db_endpoint)" >> "$GITHUB_OUTPUT"
    
    outputs:
      vm_public_ip: ${{ steps.get-outputs.outputs.vm_public_ip }}
      db_endpoint: ${{ steps.get-outputs.outputs.db_endpoint }}
      
 
